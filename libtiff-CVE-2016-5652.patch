From 9d48a792b77b2ca29df40956d4334fe39d04343f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Nikola=20Forr=C3=B3?= <nforro@redhat.com>
Date: Fri, 13 Jan 2017 15:55:43 +0100
Subject: [PATCH 4/4] Fix CVE-2016-5652

---
 tools/tiff2pdf.c | 23 ++++++++++++++---------
 1 file changed, 14 insertions(+), 9 deletions(-)

diff --git a/tools/tiff2pdf.c b/tools/tiff2pdf.c
index c6e8d64..83cd145 100644
--- a/tools/tiff2pdf.c
+++ b/tools/tiff2pdf.c
@@ -1990,9 +1990,11 @@ void t2p_read_tiff_size(T2P* t2p, TIFF* input){
 			}
 			for(i=0;i<stripcount;i++){
 				k = checkAdd64(k, sbc[i], t2p);
-				k -=4; /* don't use SOI or EOI of strip */
+				k -=2; /* don't use EOI of strip */
+				k +=2; /* add space for restart marker */
 			}
 			k = checkAdd64(k, 2, t2p); /* use EOI of last strip */
+			k = checkAdd64(k, 6, t2p); /* for DRI marker of first strip */
 			t2p->tiff_datasize = (tsize_t) k;
 			if ((uint64) t2p->tiff_datasize != k) {
 				TIFFError(TIFF2PDF_MODULE, "Integer overflow");
@@ -2064,7 +2066,7 @@ void t2p_read_tiff_size_tile(T2P* t2p, TIFF* input, ttile_t tile){
 				if(TIFFGetField(input, TIFFTAG_JPEGTABLES, &count, &jpt)!=0){
 					if(count > 4){
 						k = checkAdd64(k, count, t2p);
-						k -= 4; /* don't use EOI of header or SOI of tile */
+						k -= 2; /* don't use EOI of header or SOI of tile */
 					}
 				}
 			}
@@ -2878,21 +2880,24 @@ tsize_t t2p_readwrite_pdf_image_tile(T2P* t2p, TIFF* input, TIFF* output, ttile_
 				return(0);
 			}
 			if(TIFFGetField(input, TIFFTAG_JPEGTABLES, &count, &jpt) != 0) {
-				if (count > 0) {
-					_TIFFmemcpy(buffer, jpt, count);
+				if (count >= 4) {
+                    /* Ignore EOI marker of JpegTables */
+					_TIFFmemcpy(buffer, jpt, count - 2);
 					bufferoffset += count - 2;
+                    /* Store last 2 bytes of the JpegTables */
 					table_end[0] = buffer[bufferoffset-2];
 					table_end[1] = buffer[bufferoffset-1];
-				}
-				if (count > 0) {
 					xuint32 = bufferoffset;
+                    bufferoffset -= 2;
 					bufferoffset += TIFFReadRawTile(
 						input, 
 						tile, 
-						(tdata_t) &(((unsigned char*)buffer)[bufferoffset-2]), 
+						(tdata_t) &(((unsigned char*)buffer)[bufferoffset]), 
 						-1);
-						buffer[xuint32-2]=table_end[0];
-						buffer[xuint32-1]=table_end[1];
+                    /* Overwrite SOI marker of image scan with previously */
+                    /* saved end of JpegTables */
+					buffer[xuint32-2]=table_end[0];
+					buffer[xuint32-1]=table_end[1];
 				} else {
 					bufferoffset += TIFFReadRawTile(
 						input, 
-- 
2.7.4

